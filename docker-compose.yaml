version: '3.9'
services:
  sstp-client:
    build:
      context: ./sstp-client/
      dockerfile: Dockerfile
    container_name: sstp-client
    restart: always
    network_mode: host
    command: bash -c 'sstpc --log-stdout --log-level 4 --cert-warn --user "${VPN_USER}" --password "${VPN_PASSWORD}" "${VPN_EXTERNAL_IP}":"${VPN_EXTERNAL_PORT}" require-mschap-v2 noauth nodefaultroute noipdefault nobsdcomp nodeflate'
    privileged: true
    healthcheck:
      test: ["CMD-SHELL", "health.sh", "${VPN_EXTERNAL_IP}"]
      interval: 10s
      timeout: 5s
      retries: 5

  bird:
    container_name: bird
    build:
      context: ./bird/
      dockerfile: Dockerfile
    cap_add:
      - NET_ADMIN
      - NET_BROADCAST
      - NET_RAW
    network_mode: host
    volumes:
      - ./bird/run:/var/run/bird
      - ./bird/config:/etc/bird:rw
      - ./update-routes/lists:/opt/
    depends_on:
      sstp-client:
        condition: service_healthy

  # TODO: Перезапуск если нет интерфейса
  coredns:
    build:
      context: ./coredns/
      dockerfile: Dockerfile
    container_name: coredns
    restart: always
    ports:
      - "${VPN_INTERNAL_IP}:53:53/tcp"
      - "${VPN_INTERNAL_IP}:53:53/udp"
    volumes:
      - './coredns/config:/etc/coredns'
    depends_on:
      sstp-client:
        condition: service_healthy

  update-routes:
    build:
      context: ./update-routes/
      dockerfile: Dockerfile
    container_name: update-routes
    restart: always
    command: bash -c 'while true; do ./chklist.sh; sleep 3600; done;'
    volumes:
      - ./bird/run:/var/run/bird
      - ./update-routes/lists:/opt/lists
    depends_on:
      - bird
